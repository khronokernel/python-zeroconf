name: CI

on:
  push:
    branches:
      - master
  pull_request:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:

  build_wheels:

    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-2019, macos-12, macos-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: "master"

      # Used to host cibuildwheel
      - name: Set up Python
        uses: actions/setup-python@v5

      - name: Install python-semantic-release
        run: pipx install python-semantic-release==7.34.6

      - name: Get Release Tag
        id: release_tag
        shell: bash
        run: |
          echo "::set-output name=newest_release_tag::$(semantic-release print-version --current)"

      - uses: actions/checkout@v3
        with:
          ref: "${{ steps.release_tag.outputs.newest_release_tag }}"
          fetch-depth: 0

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.20.0
        # to supply options, put them in 'env', like:
        env:
          CIBW_SKIP: cp36-* cp37-* pp36-* pp37-* *p38-*_aarch64 cp38-*_arm64 *p39-*_aarch64 *p310-*_aarch64 pp*_aarch64 *musllinux*_aarch64
          CIBW_BEFORE_ALL_LINUX: apt install -y gcc || yum install -y gcc || apk add gcc
          CIBW_ARCHS_LINUX: auto aarch64
          CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
          CIBW_BUILD_VERBOSITY: 3
          REQUIRE_CYTHON: 1

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
